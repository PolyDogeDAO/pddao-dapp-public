{"version":3,"sources":["hooks/useLpStats.ts","hooks/useBanks.ts","hooks/useZap.ts","hooks/useEarnings.ts","hooks/useHarvest.ts","hooks/useStake.ts","hooks/useStakedBalance.ts","hooks/useBank.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","assets/img/farm.png","components/UnlockWallet/UnlockWallet.tsx","views/Bank/components/Harvest.tsx","hooks/useWithdraw.ts","views/Bank/components/DepositModal.tsx","views/Bank/components/WithdrawModal.tsx","views/Bank/components/Stake.tsx","hooks/useRedeem.ts","views/Bank/Bank.tsx","views/Farm/FarmCard.js","views/Farm/Farm.js","hooks/useHandleTransactionReceipt.ts","state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","hooks/useAllowance.ts","components/Value/Value.tsx","assets/img/background.png","hooks/useApprove.ts","hooks/useStakedTokenPriceInDollars.ts","components/IconButton/IconButton.tsx","hooks/useStatsForPool.ts","components/PageHeader/PageHeader.tsx","components/Spacer/Spacer.tsx"],"names":["useLpStats","lpTicker","useState","stat","setStat","slowRefresh","useRefresh","polydogeFinance","usePolyDogeFinance","useEffect","a","getLPStat","console","error","fetchLpPrice","useBanks","useContext","BanksContext","banks","useZap","bank","handleTransactionReceipt","useHandleTransactionReceipt","onZap","useCallback","zappingToken","tokenName","amount","zapIn","depositTokenName","useEarnings","poolName","earnTokenName","poolId","BigNumber","from","balance","setBalance","isUnlocked","fetchBalance","earnedFromBank","myAccount","catch","err","stack","refreshBalance","setInterval","config","refreshInterval","clearInterval","useHarvest","onReward","harvest","contract","sectionInUI","useStake","onStake","amountBn","parseUnits","depositToken","decimal","stake","useStakedBalance","stakedBalanceOnBank","useBank","contractName","find","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","useApproveZapper","token","ETH_TICKER","ETH","PDDOLLAR_TICKER","PDDOLLAR","PDSHARE_TICKER","PDSHARE","MATIC_TICKER","externalTokens","pendingApproval","useHasPendingApproval","address","ZAPPER_ROUTER_ADDR","currentAllowance","useAllowance","approvalState","useMemo","APPROVED","lt","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","response","summary","symbol","approval","tokenAddress","spender","StyledActionSpacer","styled","div","props","theme","spacing","StyledDescriptionText","color","grey","StyledMenuItem","withStyles","root","backgroundColor","selected","MenuItem","ZapModal","onConfirm","onDismiss","decimals","useWallet","ftmBalance","Number","toFixed","toString","pddollarBalance","useTokenBalance","bshareBalance","btcBalance","MATIC","val","setVal","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","pddollarFtmLpStats","tShareFtmLpStats","pddollarLPStats","bshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","handleChange","e","currentTarget","value","n","isNaN","parseFloat","isFinite","estimateZapIn","String","estimateZap","handleSelectMax","Modal","ModalTitle","text","InputLabel","style","id","Select","onChange","event","target","getDisplayBalance","labelId","TokenInput","onSelectMax","max","Label","ModalActions","Button","variant","onClick","Alert","severity","module","exports","UnlockWallet","Box","position","top","left","transform","AccountButton","Harvest","earnings","pddollarStats","usePDDollarStats","tShareStats","useShareStats","tokenStats","tokenPriceInDollars","priceInDollars","earnedInDollars","className","TokenSymbol","earnToken","Value","disabled","eq","useWithdraw","onWithdraw","unstake","DepositModal","fullBalance","getFullDisplayBalance","WithdrawModal","Stake","useApprove","approveStatus","tokenBalance","ThemeContext","stakedBalance","stakedTokenPriceInDollars","useStakedTokenPriceInDollars","useModal","onDismissDeposit","onPresentDeposit","onDissmissZap","onDismissWithdraw","onPresentWithdraw","closedForStaking","IconButton","useRedeem","onRedeem","exit","useStyles","makeStyles","gridItem","height","breakpoints","up","LPTokenHelpText","pairName","uniswapUrl","pddollarAddr","bshareAddr","Card","CardContent","StyledLink","href","BankNotFound","Center","PageHeader","icon","title","subtitle","StyledBank","primary","main","StyledCardsWrapper","StyledCardWrapper","Bank","window","scrollTo","classes","bankId","useParams","account","statsOnPool","useStatsForPool","name","Grid","container","justify","marginBottom","item","xs","md","lg","textAlign","Typography","yearlyAPR","dailyAPR","TVL","mt","Spacer","size","includes","FarmCard","Accordion","AccordionSummary","sm","toUpperCase","AccordionDetails","BackgroundImage","createGlobalStyle","HomeImage","Farm","path","useRouteMatch","pdsharesActive","Date","now","pdsharesLaunchesAt","getTime","activeBanks","filter","finished","Page","exact","src","FarmImage","hidden","length","map","Fragment","key","addPopup","useAddPopup","promise","then","tx","message","toLowerCase","slice","chainId","dispatch","useDispatch","hash","Error","useAllTransactions","state","useSelector","transactions","allTransactions","Object","keys","some","receipt","addedTime","isTransactionRecent","StyledInputWrapper","borderRadius","StyledInput","input","Input","endAdornment","placeholder","startAdornment","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","toLocaleString","StyledModalActions","StyledModalAction","children","l","React","Children","toArray","child","i","allowance","setAllowance","fetchAllowance","StyledValue","stakedTokenName","stakedToken","setStakedTokenPriceInDollars","getDepositTokenPriceInDollars","refreshStakedTokenPriceInDollars","StyledButton","button","undefined","Link","to","poolAPRs","setPoolAPRs","fetchAPRsForPool","getPoolAPRs","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3","s"],"mappings":"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","file":"static/js/8.e37dda62.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {LPStat} from '../polydoge-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useLpStats = (lpTicker: string) => {\r\n  const [stat, setStat] = useState<LPStat>();\r\n  const {slowRefresh} = useRefresh();\r\n  const polydogeFinance = usePolyDogeFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchLpPrice() {\r\n      try {\r\n        setStat(await polydogeFinance.getLPStat(lpTicker));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchLpPrice();\r\n  }, [setStat, polydogeFinance, slowRefresh, lpTicker]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useLpStats;\r\n","import {useContext} from 'react';\r\nimport {Context as BanksContext} from '../contexts/Banks';\r\n\r\nconst useBanks = () => {\r\n  const {banks} = useContext(BanksContext);\r\n  return [banks];\r\n};\r\n\r\nexport default useBanks;\r\n","import {useCallback} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {Bank} from '../polydoge-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useZap = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleZap = useCallback(\r\n    (zappingToken: string, tokenName: string, amount: string) => {\r\n      handleTransactionReceipt(\r\n        polydogeFinance.zapIn(zappingToken, tokenName, amount),\r\n        `Zap ${amount} in ${bank.depositTokenName}.`,\r\n      );\r\n    },\r\n    [bank, polydogeFinance, handleTransactionReceipt],\r\n  );\r\n  return {onZap: handleZap};\r\n};\r\n\r\nexport default useZap;\r\n","import {useCallback, useEffect, useState} from 'react';\r\nimport {BigNumber} from 'ethers';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {ContractName} from '../polydoge-finance';\r\nimport config from '../config';\r\n\r\nconst useEarnings = (poolName: ContractName, earnTokenName: String, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const isUnlocked = polydogeFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await polydogeFinance.earnedFromBank(poolName, earnTokenName, poolId, polydogeFinance.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, earnTokenName, poolId, polydogeFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, polydogeFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarnings;\r\n","import {useCallback} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {Bank} from '../polydoge-finance';\r\n\r\nconst useHarvest = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleReward = useCallback(() => {\r\n    handleTransactionReceipt(\r\n      polydogeFinance.harvest(bank.contract, bank.poolId, bank.sectionInUI),\r\n      `Claim ${bank.earnTokenName} from ${bank.contract}`,\r\n    );\r\n  }, [bank, polydogeFinance, handleTransactionReceipt]);\r\n\r\n  return { onReward: handleReward };\r\n};\r\n\r\nexport default useHarvest;\r\n","import { useCallback } from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport { Bank } from '../polydoge-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\nimport { BigNumber } from 'ethers';\r\n\r\nconst useStake = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleStake = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = bank.sectionInUI !== 3 ? parseUnits(amount, bank.depositToken.decimal) : BigNumber.from(amount);\r\n      if (bank.sectionInUI === 3) {\r\n        handleTransactionReceipt(\r\n          polydogeFinance.stake(bank.contract, bank.poolId,bank.sectionInUI, amountBn),\r\n          `Buy ${amount} ${bank.depositTokenName} Node`,\r\n        );\r\n      } else {\r\n        handleTransactionReceipt(\r\n          polydogeFinance.stake(bank.contract, bank.poolId,bank.sectionInUI, amountBn),\r\n          `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\r\n        );\r\n      }\r\n    },\r\n    [bank, polydogeFinance, handleTransactionReceipt],\r\n  );\r\n  return { onStake: handleStake };\r\n};\r\n\r\nexport default useStake;\r\n","import {useCallback, useEffect, useState} from 'react';\r\n\r\nimport {BigNumber} from 'ethers';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {ContractName} from '../polydoge-finance';\r\nimport config from '../config';\r\n\r\nconst useStakedBalance = (poolName: ContractName, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const isUnlocked = polydogeFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await polydogeFinance.stakedBalanceOnBank(poolName, poolId, polydogeFinance.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, poolId, polydogeFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, setBalance, polydogeFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalance;\r\n","import {useContext} from 'react';\r\nimport {Context as BanksContext} from '../contexts/Banks';\r\nimport {Bank, ContractName} from '../polydoge-finance';\r\n\r\nconst useBank = (contractName: ContractName): Bank => {\r\n  const {banks} = useContext(BanksContext);\r\n  return banks.find((bank) => bank.contract === contractName);\r\n};\r\n\r\nexport default useBank;\r\n","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../polydoge-finance/ERC20';\r\nimport {ETH_TICKER, PDDOLLAR_TICKER, PDSHARE_TICKER, MATIC_TICKER, ZAPPER_ROUTER_ADDR} from '../utils/constants';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  let token: ERC20;\r\n  if (zappingToken === ETH_TICKER) token = polydogeFinance.ETH;\r\n  else if (zappingToken === PDDOLLAR_TICKER) token = polydogeFinance.PDDOLLAR;\r\n  else if (zappingToken === PDSHARE_TICKER) token = polydogeFinance.PDSHARE;\r\n  else if (zappingToken === MATIC_TICKER) token = polydogeFinance.externalTokens[MATIC_TICKER];\r\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\r\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (token === polydogeFinance.ETH) return ApprovalState.APPROVED;\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval, token, polydogeFinance]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: ZAPPER_ROUTER_ADDR,\r\n      },\r\n    });\r\n  }, [approvalState, token, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApproveZapper;\r\n","import React, {useState, useMemo} from 'react';\r\n\r\nimport {Button, Select, MenuItem, InputLabel, withStyles} from '@material-ui/core';\r\n// import Button from '../../../components/Button'\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport styled from 'styled-components';\r\n\r\nimport {getDisplayBalance} from '../../../utils/formatBalance';\r\nimport Label from '../../../components/Label';\r\nimport useLpStats from '../../../hooks/useLpStats';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport usePolyDogeFinance from '../../../hooks/usePolyDogeFinance';\r\nimport {useWallet} from 'use-wallet';\r\nimport useApproveZapper, {ApprovalState} from '../../../hooks/useApproveZapper';\r\nimport {PDDOLLAR_TICKER, PDSHARE_TICKER, ETH_TICKER, MATIC_TICKER} from '../../../utils/constants';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\ninterface ZapProps extends ModalProps {\r\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n}\r\n\r\nconst ZapModal: React.FC<ZapProps> = ({onConfirm, onDismiss, tokenName = '', decimals = 18}) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const {balance} = useWallet();\r\n  const ftmBalance = (Number(balance) / 1e18).toFixed(4).toString();\r\n  const pddollarBalance = useTokenBalance(polydogeFinance.PDDOLLAR);\r\n  const bshareBalance = useTokenBalance(polydogeFinance.PDSHARE);\r\n  const btcBalance = useTokenBalance(polydogeFinance.MATIC);\r\n  const [val, setVal] = useState('');\r\n  const [zappingToken, setZappingToken] = useState(ETH_TICKER);\r\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\r\n  const [estimate, setEstimate] = useState({token0: '0', token1: '0'}); // token0 will always be ETH in this case\r\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\r\n  const pddollarFtmLpStats = useLpStats('PDDOLLAR-WMATIC-LP');\r\n  const tShareFtmLpStats = useLpStats('PDSHARE-ETH-LP');\r\n  const pddollarLPStats = useMemo(() => (pddollarFtmLpStats ? pddollarFtmLpStats : null), [pddollarFtmLpStats]);\r\n  const bshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\r\n  const ftmAmountPerLP = tokenName.startsWith(PDDOLLAR_TICKER) ? pddollarLPStats?.ftmAmount : bshareLPStats?.ftmAmount;\r\n  /**\r\n   * Checks if a value is a valid number or not\r\n   * @param n is the value to be evaluated for a number\r\n   * @returns\r\n   */\r\n  function isNumeric(n: any) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n  const handleChangeAsset = (event: any) => {\r\n    const value = event.target.value;\r\n    setZappingToken(value);\r\n    setZappingTokenBalance(ftmBalance);\r\n    if (event.target.value === PDSHARE_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(bshareBalance, decimals));\r\n    }\r\n    if (event.target.value === PDDOLLAR_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(pddollarBalance, decimals));\r\n    }\r\n    if (event.target.value === MATIC_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(btcBalance, decimals));\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e: any) => {\r\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\r\n      setVal(e.currentTarget.value);\r\n      setEstimate({token0: '0', token1: '0'});\r\n    }\r\n    if (!isNumeric(e.currentTarget.value)) return;\r\n    setVal(e.currentTarget.value);\r\n    const estimateZap = await polydogeFinance.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\r\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\r\n  };\r\n\r\n  const handleSelectMax = async () => {\r\n    setVal(zappingTokenBalance);\r\n    const estimateZap = await polydogeFinance.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\r\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Zap in ${tokenName}`} />\r\n\r\n      <StyledActionSpacer />\r\n      <InputLabel style={{color: '#410056'}} id=\"label\">\r\n        Select asset to zap with\r\n      </InputLabel>\r\n      <Select onChange={handleChangeAsset} style={{color: '#410056'}} labelId=\"label\" id=\"select\" value={zappingToken}>\r\n        <StyledMenuItem value={ETH_TICKER}>ETH</StyledMenuItem>\r\n        <StyledMenuItem value={PDSHARE_TICKER}>PDSHARE</StyledMenuItem>\r\n        {/* <StyledMenuItem value={MATIC_TICKER}>MATIC</StyledMenuItem> */}\r\n        {/* PDDollar as an input for zapping will be disabled due to issues occuring with the Gatekeeper system */}\r\n        {/* <StyledMenuItem value={PDDOLLAR_TICKER}>PDDOLLAR</StyledMenuItem> */}\r\n      </Select>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={zappingTokenBalance}\r\n        symbol={zappingToken}\r\n      />\r\n      <Label text=\"Zap Estimations\" />\r\n      <StyledDescriptionText>\r\n        {' '}\r\n        {tokenName}: {Number(estimate.token0) / Number(ftmAmountPerLP)}\r\n      </StyledDescriptionText>\r\n      <StyledDescriptionText>\r\n        {' '}\r\n        ({Number(estimate.token0)} {tokenName.startsWith(PDSHARE_TICKER) ? PDSHARE_TICKER : ETH_TICKER} /{' '}\r\n        {Number(estimate.token1)} {tokenName.startsWith(PDSHARE_TICKER) ? ETH_TICKER : PDSHARE_TICKER}){' '}\r\n      </StyledDescriptionText>\r\n      <ModalActions>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\r\n          }\r\n        >\r\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\r\n        </Button>\r\n      </ModalActions>\r\n\r\n      <StyledActionSpacer />\r\n      <Alert variant=\"filled\" severity=\"info\">\r\n        New feature. Use at your own risk!\r\n      </Alert>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledDescriptionText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 22px;\r\n  justify-content: flex-start;\r\n`;\r\nconst StyledMenuItem = withStyles({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    color: '#410056',\r\n    '&:hover': {\r\n      backgroundColor: 'grey',\r\n      color: '#410056',\r\n    },\r\n    selected: {\r\n      backgroundColor: 'black',\r\n    },\r\n  },\r\n})(MenuItem);\r\n\r\nexport default ZapModal;\r\n","module.exports = __webpack_public_path__ + \"static/media/farm.b4a819ad.png\";","import React from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","import React, {useMemo} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {Button, } from '@material-ui/core';\r\n// import Button from '../../../components/Button';\r\n// import Card from '../../../components/Card';\r\n// import CardContent from '../../../components/CardContent';\r\nimport Value from '../../../components/Value';\r\nimport useEarnings from '../../../hooks/useEarnings';\r\nimport useHarvest from '../../../hooks/useHarvest';\r\n\r\nimport {getDisplayBalance} from '../../../utils/formatBalance';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport {Bank} from '../../../polydoge-finance';\r\nimport usePDDollarStats from '../../../hooks/usePDDollarStats';\r\nimport useShareStats from '../../../hooks/usePDShareStats';\r\n\r\ninterface HarvestProps {\r\n  bank: Bank;\r\n}\r\n\r\nconst Harvest: React.FC<HarvestProps> = ({bank}) => {\r\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\r\n  const {onReward} = useHarvest(bank);\r\n  const pddollarStats = usePDDollarStats();\r\n  const tShareStats = useShareStats();\r\n\r\n  const tokenName = bank.earnTokenName === 'PDSHARE' ? 'PDSHARE' : 'PDDOLLAR';\r\n  const tokenStats = bank.earnTokenName === 'PDSHARE' ? tShareStats : pddollarStats;\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n    [tokenStats],\r\n  );\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n  return (\r\n    <div className='claimReward'>\r\n      <div className='label pinkLabel'>Reward</div>\r\n      <TokenSymbol symbol={bank.earnToken.symbol} />\r\n      <div className='MY'>{`${tokenName} Earned`}</div>\r\n      <Value value={getDisplayBalance(earnings, bank.earnToken.decimal, 2)} />\r\n      <div className='MB'>{`≈ $${earnedInDollars}`}</div>\r\n      <Button onClick={onReward} disabled={earnings.eq(0)} className={earnings.eq(0) ? 'shinyButtonDisabled' : 'shinyButtonSecondaryFarm'}>\r\n        Claim\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default Harvest;\r\n","import {useCallback} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {Bank} from '../polydoge-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {parseUnits} from 'ethers/lib/utils';\r\n\r\nconst useWithdraw = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleWithdraw = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        polydogeFinance.unstake(bank.contract, bank.poolId, amountBn),\r\n        `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract}`,\r\n      );\r\n    },\r\n    [bank, polydogeFinance, handleTransactionReceipt],\r\n  );\r\n  return {onWithdraw: handleWithdraw};\r\n};\r\n\r\nexport default useWithdraw;\r\n","import React, {useCallback, useMemo, useState} from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n// import Button from '../../../components/Button'\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\n\r\ninterface DepositModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  decimals: number;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({max, decimals, onConfirm, onDismiss, tokenName = ''}) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals, false);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Deposit ${tokenName}`} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        {/* <Button color=\"secondary\" variant=\"outlined\" onClick={onDismiss}>Cancel</Button> */}\r\n        <Button className=\"shinyButtonSecondary\" onClick={() => onConfirm(val)}>\r\n          Confirm\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import React, {useCallback, useMemo, useState} from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\n// import Button from '../../../components/Button'\r\nimport Modal, {ModalProps} from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\r\nimport {BigNumber} from 'ethers';\r\n\r\ninterface WithdrawModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({onConfirm, onDismiss, max, tokenName = '', decimals = 18}) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals, false);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Withdraw ${tokenName}`} />\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button className=\"shinyButtonSecondary\" onClick={() => onConfirm(val)}>\r\n          Confirm\r\n        </Button>\r\n        {/* <Button color=\"secondary\" onClick={onDismiss}>Cancel</Button> */}\r\n\r\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","/* eslint-disable */\r\nimport React, { useMemo, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// import Button from '../../../components/Button';\r\nimport { Button, Card, CardContent, Typography, Box } from '@material-ui/core';\r\n// import Card from '../../../components/Card';\r\n// import CardContent from '../../../components/CardContent';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '../../../components/IconButton';\r\nimport Label from '../../../components/Label';\r\nimport Value from '../../../components/Value';\r\nimport { ThemeContext } from 'styled-components';\r\n\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useModal from '../../../hooks/useModal';\r\nimport useStake from '../../../hooks/useStake';\r\nimport useZap from '../../../hooks/useZap';\r\nimport useStakedBalance from '../../../hooks/useStakedBalance';\r\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useWithdraw from '../../../hooks/useWithdraw';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\n\r\nimport DepositModal from './DepositModal';\r\nimport WithdrawModal from './WithdrawModal';\r\nimport ZapModal from './ZapModal';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { Bank } from '../../../polydoge-finance';\r\n\r\ninterface StakeProps {\r\n  bank: Bank;\r\n}\r\n\r\nconst Stake: React.FC<StakeProps> = ({ bank }) => {\r\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\r\n\r\n  const { color: themeColor } = useContext(ThemeContext);\r\n  const tokenBalance = useTokenBalance(bank.depositToken);\r\n  const stakedBalance = useStakedBalance(bank.contract, bank.poolId);\r\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (stakedTokenPriceInDollars ? stakedTokenPriceInDollars : null),\r\n    [stakedTokenPriceInDollars],\r\n  );\r\n  const earnedInDollars = (\r\n    Number(tokenPriceInDollars) * Number(getDisplayBalance(stakedBalance, bank.depositToken.decimal))\r\n  ).toFixed(2);\r\n  const { onStake } = useStake(bank);\r\n  const { onZap } = useZap(bank);\r\n  const { onWithdraw } = useWithdraw(bank);\r\n\r\n  const [onPresentDeposit, onDismissDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onStake(amount);\r\n        onDismissDeposit();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentZap, onDissmissZap] = useModal(\r\n    <ZapModal\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(zappingToken, tokenName, amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onZap(zappingToken, tokenName, amount);\r\n        onDissmissZap();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onWithdraw(amount);\r\n        onDismissWithdraw();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  return (\r\n    <div className='tokenCard deposit'>\r\n      <div className='label'>Stake</div>\r\n      <div className='tokenBox'>\r\n        <TokenSymbol symbol={bank.depositToken.symbol} />\r\n      </div>\r\n      <div className='MY'>{`${bank.depositTokenName} Staked`}</div>\r\n      <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal, 2)} />\r\n      <div className='MB'>{`≈ $${earnedInDollars}`}</div>\r\n      <div>\r\n        {approveStatus !== ApprovalState.APPROVED ? (\r\n          <Button\r\n            disabled={\r\n              bank.closedForStaking ||\r\n              approveStatus === ApprovalState.PENDING ||\r\n              approveStatus === ApprovalState.UNKNOWN\r\n            }\r\n            onClick={approve}\r\n            className={\r\n              bank.closedForStaking ||\r\n              approveStatus === ApprovalState.PENDING ||\r\n              approveStatus === ApprovalState.UNKNOWN\r\n                ? 'shinyButtonDisabled'\r\n                : 'shinyButton'\r\n            }\r\n          >\r\n            {`Approve ${bank.depositTokenName}`}\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <div className='addRemoveButtons'>\r\n              <div className='removeFunds'>\r\n                <IconButton onClick={onPresentWithdraw}>\r\n                  Withdraw\r\n                </IconButton>\r\n              </div>\r\n              <div className='addFunds'>\r\n                <IconButton disabled={bank.closedForStaking} onClick={() => (bank.closedForStaking ? null : onPresentDeposit())}>\r\n                  Add\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default Stake;\r\n","import {useCallback} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {Bank} from '../polydoge-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useRedeem = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleRedeem = useCallback(() => {\r\n    handleTransactionReceipt(polydogeFinance.exit(bank.contract, bank.poolId), `Redeem ${bank.contract}`);\r\n  }, [bank, polydogeFinance, handleTransactionReceipt]);\r\n\r\n  return {onRedeem: handleRedeem};\r\n};\r\n\r\nexport default useRedeem;\r\n","/* eslint-disable */\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Box, Button, Card, CardContent, Typography, Grid } from '@material-ui/core';\r\n\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Spacer from '../../components/Spacer';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Harvest from './components/Harvest';\r\nimport Stake from './components/Stake';\r\nimport useBank from '../../hooks/useBank';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\nimport useRedeem from '../../hooks/useRedeem';\r\nimport { Bank as BankEntity } from '../../polydoge-finance';\r\nimport usePolyDogeFinance from '../../hooks/usePolyDogeFinance';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    height: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '90px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Bank: React.FC = () => {\r\n  useEffect(() => window.scrollTo(0, 0));\r\n  const classes = useStyles();\r\n  // @ts-ignore\r\n  const {bankId} = useParams();\r\n  const bank = useBank(bankId);\r\n\r\n  const { account } = useWallet();\r\n  const { onRedeem } = useRedeem(bank);\r\n  const statsOnPool = useStatsForPool(bank);\r\n  return account && bank ? (\r\n    <>\r\n      <PageHeader\r\n        icon=\"🏦\"\r\n        subtitle={`Deposit ${bank?.depositTokenName} and earn ${bank?.earnTokenName}`}\r\n        title={bank?.name}\r\n      />\r\n      <Box>\r\n        <Grid container justify=\"center\" spacing={3} style={{ marginBottom: '50px' }}>\r\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n            <Card className={classes.gridItem}>\r\n              <CardContent style={{ textAlign: 'center' }}>\r\n                <Typography>APR</Typography>\r\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.yearlyAPR}%</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n            <Card className={classes.gridItem}>\r\n              <CardContent style={{ textAlign: 'center' }}>\r\n                <Typography>Daily APR</Typography>\r\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.dailyAPR}%</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\r\n            <Card className={classes.gridItem}>\r\n              <CardContent style={{ textAlign: 'center' }}>\r\n                <Typography>TVL</Typography>\r\n                <Typography>${statsOnPool?.TVL}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      {/* <Box mt={5}>\r\n                <Grid container justify=\"center\" spacing={3} style={{ marginBottom: '30px' }}>\r\n\r\n        <Alert variant=\"filled\" severity=\"warning\">\r\n            Our reward farms have transitioned to QuickSwap LPs from ApeSwap.<br /> ApeSwap LP based farms no longer have rewards.\r\n\r\n\r\n        </Alert></Grid>\r\n        </Box> */}\r\n      <Box mt={5}>\r\n        <StyledBank>\r\n          <StyledCardsWrapper>\r\n            <StyledCardWrapper>\r\n              <Harvest bank={bank} />\r\n            </StyledCardWrapper>\r\n            <Spacer />\r\n            <StyledCardWrapper>{<Stake bank={bank} />}</StyledCardWrapper>\r\n          </StyledCardsWrapper>\r\n          <Spacer size=\"lg\" />\r\n          {bank.depositTokenName.includes('LP') && <LPTokenHelpText bank={bank} />}\r\n          <Spacer size=\"lg\" />\r\n          <div>\r\n            <Button onClick={onRedeem} className=\"shinyButtonSecondary\">\r\n              Claim &amp; Withdraw\r\n            </Button>\r\n          </div>\r\n          <Spacer size=\"lg\" />\r\n        </StyledBank>\r\n      </Box>\r\n    </>\r\n  ) : !bank ? (\r\n    <BankNotFound />\r\n  ) : (\r\n    <UnlockWallet />\r\n  );\r\n};\r\n\r\nconst LPTokenHelpText: React.FC<{ bank: BankEntity }> = ({ bank }) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const pddollarAddr = polydogeFinance.PDDOLLAR.address;\r\n  const bshareAddr = polydogeFinance.PDSHARE.address;\r\n\r\n  let pairName: string;\r\n  let uniswapUrl: string;\r\n  if (bank.depositTokenName.startsWith('PDDOLLAR-WMATIC')) {\r\n    pairName = 'PDDOLLAR-WMATIC pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270/' + pddollarAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDSHARE-ETH')) {\r\n    pairName = 'PDSHARE-ETH pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619/' + bshareAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDSHARE-WMATIC')) {\r\n    pairName = 'PDSHARE-WMATIC pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270/' + bshareAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDSHARE-PDDOLLAR')) {\r\n    pairName = 'PDSHARE-PDDOLLAR pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x146e58D34EaB0bFf7e0a63cfe9332908d680c667/' + bshareAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDDOLLAR-USDC')) {\r\n    pairName = 'PDDOLLAR-USDC pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174/' + pddollarAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDDOLLAR-POLYDOGE')) {\r\n    pairName = 'PDDOLLAR-POLYDOGE pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174/' + pddollarAddr;\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledLink href={uniswapUrl} target=\"_blank\">\r\n          {`Provide liquidity for ${pairName} now on QuickSwap`}\r\n        </StyledLink>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst BankNotFound = () => {\r\n  return (\r\n    <Center>\r\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"Hold your horse, mate!.\" />\r\n    </Center>\r\n  );\r\n};\r\n\r\nconst StyledBank = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.color.primary.main};\r\n`;\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Bank;\r\n","import React from 'react';\r\nimport {Grid, Accordion, AccordionSummary, AccordionDetails, Button} from '@material-ui/core';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\nimport Harvest from '../Bank/components/Harvest';\r\nimport Stake from '../Bank/components/Stake';\r\nimport useRedeem from '../../hooks/useRedeem';\r\nimport usePolyDogeFinance from '../../hooks/usePolyDogeFinance';\r\nimport './Farm.css';\r\nconst FarmCard = ({bank}) => {\r\n  const { onRedeem } = useRedeem(bank);\r\n  const statsOnPool = useStatsForPool(bank);\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const pddollarAddr = polydogeFinance.PDDOLLAR.address;\r\n  const bshareAddr = polydogeFinance.PDSHARE.address;\r\n  let pairName = '';\r\n  let uniswapUrl = '';\r\n  if (bank.depositTokenName.startsWith('PDDOLLAR-WMATIC')) {\r\n    pairName = 'PDDOLLAR-WMATIC pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270/' + pddollarAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDSHARE-ETH')) {\r\n    pairName = 'PDSHARE-ETH pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619/' + bshareAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDSHARE-WMATIC')) {\r\n    pairName = 'PDSHARE-WMATIC pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270/' + bshareAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDSHARE-PDDOLLAR')) {\r\n    pairName = 'PDSHARE-PDDOLLAR pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x146e58D34EaB0bFf7e0a63cfe9332908d680c667/' + bshareAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDDOLLAR-USDC')) {\r\n    pairName = 'PDDOLLAR-USDC pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174/' + pddollarAddr;\r\n  } else if (bank.depositTokenName.startsWith('PDDOLLAR-POLYDOGE')) {\r\n    pairName = 'PDDOLLAR-POLYDOGE pair';\r\n    uniswapUrl = 'https://quickswap.exchange/#/add/0x8A953CfE442c5E8855cc6c61b1293FA648BAE472/' + pddollarAddr;\r\n  }\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Accordion className='baseCard singlFarmCard'>\r\n        <AccordionSummary>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={5}>\r\n              <div className='titleLogoSingleFarm'>\r\n                <div className='titleInfoSingleFarm'>\r\n                  {bank.depositTokenName.toUpperCase()} Earn {` ${bank.earnTokenName}`}\r\n                </div>\r\n                <div className='logosBox'>\r\n                  <TokenSymbol symbol={bank.depositTokenName} />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            {/* <Grid item xs={4} sm={3}>\r\n                <div className='depositedSingleFarm'>\r\n                </div>\r\n                 <div>\r\n                  {bank.depositTokenName}\r\n                </div> \r\n            </Grid> */}\r\n            <Grid item xs={4} sm={3}>\r\n              <div className='containerInfoSingleFarm'>\r\n                <div className='titleInfoSingleFarm'>Daily APR</div>\r\n                <div className='singleFarmApr'>{bank.closedForStaking ? '0.00' : statsOnPool?.dailyAPR}%</div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={5} sm={3}>\r\n              <div className='containerInfoSingleFarm'>\r\n                <div className='titleInfoSingleFarm'>TVL</div>\r\n                <div className='singleFarmTvl'>${statsOnPool?.TVL}</div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={3} sm={1}>\r\n              <div className='iconAccordion'>\r\n              </div>\r\n            </Grid>\r\n        </Grid>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={3} className='add2Farm'>\r\n            <Grid item xs={12} sm={6} className='rewardSingleFarm'>\r\n              <Harvest bank={bank} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className='stakeSingleFarm'>\r\n              <Stake bank={bank} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div className='claimAddLiquidity'>\r\n                <div className={[bank.depositTokenName] + 'class addLiquidityPair'}>\r\n                  <div className='MB'>Add liquidity to:</div>\r\n                  <Button className='buttonAddLiquidity shinyButtonSecondary bgYellow ' href={uniswapUrl} target='_blank'>{pairName}</Button>\r\n                </div>\r\n                <div className='endStaking'>\r\n                  <div className='MB'>End staking:</div>\r\n                  <Button onClick={onRedeem} className=\"shinyButtonSecondary\">\r\n                    Claim &amp; Withdraw\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FarmCard;","/* eslint-disable */\r\nimport React from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport Bank from '../Bank';\r\nimport {Grid, Button } from '@material-ui/core';\r\nimport Page from '../../components/Page';\r\nimport FarmCard from './FarmCard';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport useBanks from '../../hooks/useBanks';\r\nimport HomeImage from '../../assets/img/background.png';\r\nimport config from '../../config';\r\nimport FarmImage from '../../assets/img/farm.png';\r\n/* import { Alert } from '@material-ui/lab';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport StakeImage from '../../assets/img/stake icon.png';\r\nimport CoinsImage from '../../assets/img/coins icon.png';\r\nimport LaunchCountdown from '../../components/LaunchCountdown';\r\nimport ReactDOM from 'react-dom';\r\nimport Countdown from 'react-countdown'; */\r\nimport './Farm.css';\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background-image: url(${HomeImage});\r\n  }\r\n`;\r\n\r\nconst Farm = () => {\r\n  const [banks] = useBanks();\r\n  const { path } = useRouteMatch();\r\n/*   const { account } = useWallet(); */\r\n  const pdsharesActive = Date.now() >= config.pdsharesLaunchesAt.getTime();\r\n  const activeBanks = banks.filter((bank) => !bank.finished && (pdsharesActive || bank.sectionInUI !== 2));\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <Route exact path={path}>\r\n          <BackgroundImage />\r\n          <div className='subHeader MB'>\r\n            <div className='containerInfoSub'>\r\n              <img className=\"farmImg\" src={FarmImage} />\r\n              <div className='pageInfo'>\r\n                <h1 className='titlePage'>Farms</h1>\r\n                <span>Stake to earn POLYDOGE DAO TOKENS</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* {!!account ? ( */}\r\n\r\n                \r\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 2).length === 0}>\r\n                <Grid container spacing={3} className=\"reverse\">\r\n                  <Grid item xs={12} md={9}>\r\n                    <Grid container spacing={1}>\r\n                      {activeBanks\r\n                        .filter((bank) => bank.sectionInUI === 2)\r\n                        .map((bank) => (\r\n                          <React.Fragment key={bank.name}>\r\n                            <FarmCard bank={bank} />\r\n                          </React.Fragment>\r\n                        ))}\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid className='infoFarm' item xs={12} md={3}>\r\n                      <div className='baseCard farmInfo'>\r\n                        <div className='farmEarn'>\r\n                          Earn PDSHARE by staking QuickSwap LP\r\n                        </div>\r\n                        <div className='farmLiveEnd'>\r\n                          PDSHARE Pools Reward Distribution is LIVE and ends on:\r\n                          <span className='farmEndDate'>\r\n                            Tue April 04 2023 16:00:00 GMT+0000\r\n                          </span>\r\n                        </div>\r\n                        <div variant=\"filled\" severity=\"warning\" className='farmLiveInfo'>\r\n                          PDSHARE Farms starts at Mar 30, 16:00:00 GMT Epoch #1648656000 and will continue running for 370 Days.\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n{/*               <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 1).length === 0}>\r\n                <div >\r\n                  Earn PDDOLLAR by staking QuickSwap LP\r\n                </div>\r\n                <Grid container spacing={3}>\r\n                  {activeBanks\r\n                    .filter((bank) => bank.sectionInUI === 1)\r\n                    .map((bank) => (\r\n                      <React.Fragment key={bank.name}>\r\n                        <FarmCard bank={bank} />\r\n                      </React.Fragment>\r\n                    ))}\r\n                </Grid>\r\n              </div> */}\r\n\r\n              {/* <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 0).length === 0}>\r\n                <Grid container spacing={3} className=\"reverse\">\r\n                  <Grid item xs={12} md={9}>\r\n                    <Grid container spacing={1}>\r\n                      {activeBanks\r\n                        .filter((bank) => bank.sectionInUI === 0)\r\n                        .map((bank) => (\r\n                          <React.Fragment key={bank.name}>\r\n                            <FarmCard bank={bank} />\r\n                          </React.Fragment>\r\n                        ))}\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid className='infoFarm' item xs={12} md={3}>\r\n                      <div className='baseCard farmInfo genesisFarm'>\r\n                        <div className='farmEarn'>\r\n                         GENESIS POOLS\r\n                        </div>\r\n                        <div className='farmLiveEnd'>\r\n                          Genesis Pools Reward Distribution ended on:\r\n                          <span className='farmEndDate'>\r\n                            Sat Apr 02 2022 16:00:00 GMT+0000\r\n                          </span>\r\n                        </div>\r\n                        <div variant=\"filled\" severity=\"warning\" className='farmLiveInfo'>\r\n                          WMatic and USDC pools have 2% Deposit Fee. PolyDoge has no deposit fee. Pool Ended at Epoch #1648915200.\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                </Grid>\r\n              </div> */}\r\n\r\n          {/* ) : (\r\n            <UnlockWallet />\r\n          )} */}\r\n        </Route>\r\n        <Route path={`${path}/:bankId`}>\r\n          <BackgroundImage />\r\n          <Bank />\r\n        </Route>\r\n        {/* {!!account && !pdsharesActive && (\r\n          <div style={{ marginTop: '2rem' }}>\r\n            <LaunchCountdown deadline={config.pdsharesLaunchesAt} description=\"PDSHARE POOL\" />\r\n          </div>\r\n        )} */}\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Farm;\r\n","import {useCallback} from 'react';\r\nimport {TransactionResponse} from '@ethersproject/providers';\r\nimport {useTransactionAdder} from '../state/transactions/hooks';\r\nimport {useAddPopup} from '../state/application/hooks';\r\n\r\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\r\n  const addTransaction = useTransactionAdder();\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<TransactionResponse>, summary: string) => {\r\n      promise\r\n        .then((tx) => addTransaction(tx, {summary}))\r\n        .catch((err) => {\r\n          if (err.message.includes('User denied')) {\r\n            // User denied transaction signature on MetaMask.\r\n            return;\r\n          }\r\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\r\n          console.error(`${message}: ${err.message || err.stack}`);\r\n          addPopup({error: {message, stack: err.message || err.stack}});\r\n        });\r\n    },\r\n    [addPopup, addTransaction],\r\n  );\r\n}\r\n\r\nexport default useHandleTransactionReceipt;\r\n","import {TransactionResponse} from '@ethersproject/providers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useWallet} from 'use-wallet';\r\n\r\nimport {AppDispatch, AppState} from '../index';\r\nimport {addTransaction, clearAllTransactions} from './actions';\r\nimport {TransactionDetails} from './reducer';\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {summary?: string; approval?: {tokenAddress: string; spender: string}},\r\n) => void {\r\n  const {chainId, account} = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {summary, approval}: {summary?: string; approval?: {tokenAddress: string; spender: string}} = {},\r\n    ) => {\r\n      if (!account) return;\r\n      if (!chainId) return;\r\n\r\n      const {hash} = response;\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.');\r\n      }\r\n      dispatch(addTransaction({hash, from: account, chainId, approval, summary}));\r\n    },\r\n    [dispatch, chainId, account],\r\n  );\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): {[txHash: string]: TransactionDetails} {\r\n  const {chainId} = useWallet();\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  return chainId ? state[chainId] ?? {} : {};\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions();\r\n  if (!transactionHash || !transactions[transactionHash]) {\r\n    return false;\r\n  }\r\n  return !transactions[transactionHash].receipt;\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000;\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions();\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash];\r\n        if (!tx) return false;\r\n        if (tx.receipt) {\r\n          return false;\r\n        } else {\r\n          const approval = tx.approval;\r\n          if (!approval) return false;\r\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  );\r\n}\r\n\r\nexport function useClearAllTransactions(): {clearAllTransactions: () => void} {\r\n  const {chainId} = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return {\r\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({chainId})), [dispatch, chainId]),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode;\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  startAdornment?: React.ReactNode;\r\n  value: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  );\r\n};\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[200]};\r\n  border-radius: ${(props) => props.theme.borderRadius}px;\r\n  display: flex;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`;\r\n\r\nexport default Input;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport BigNumber from 'bignumber.js/bignumber';\r\nimport { Button } from '@material-ui/core';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n                Max\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default TokenInput;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalActions: React.FC = ({children}) => {\r\n  const l = React.Children.toArray(children).length;\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <StyledSpacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  );\r\n};\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[100]}00;\r\n  display: flex;\r\n  height: 96px;\r\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\r\n    ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ModalActions;\r\n","import {useCallback, useEffect, useState} from 'react';\r\nimport {useWallet} from 'use-wallet';\r\nimport {BigNumber} from 'ethers';\r\nimport ERC20 from '../polydoge-finance/ERC20';\r\n\r\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\r\n  const [allowance, setAllowance] = useState<BigNumber>(null);\r\n  const {account} = useWallet();\r\n\r\n  const fetchAllowance = useCallback(async () => {\r\n    const allowance = await token.allowance(account, spender);\r\n    setAllowance(allowance);\r\n  }, [account, spender, token]);\r\n\r\n  useEffect(() => {\r\n    if (account && spender && token) {\r\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\r\n    }\r\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\r\n\r\n  return allowance;\r\n};\r\n\r\nexport default useAllowance;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\ninterface ValueProps {\r\n  value: string;\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({value}) => {\r\n  return <StyledValue>{value}</StyledValue>;\r\n};\r\n\r\nconst StyledValue = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default Value;\r\n","module.exports = __webpack_public_path__ + \"static/media/background.f7271e22.png\";","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../polydoge-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import {useCallback, useEffect, useState} from 'react';\r\n\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport config from '../config';\r\nimport ERC20 from '../polydoge-finance/ERC20';\r\n\r\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\r\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const isUnlocked = polydogeFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await polydogeFinance.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\r\n    setStakedTokenPriceInDollars(balance);\r\n  }, [stakedToken, stakedTokenName, polydogeFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\r\n    }\r\n  }, [isUnlocked, setStakedTokenPriceInDollars, polydogeFinance, fetchBalance]);\r\n\r\n  return stakedTokenPriceInDollars;\r\n};\r\n\r\nexport default useStakedTokenPriceInDollars;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IconButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n  to?: string;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({ children, disabled, onClick, to }) => {\r\n  return (\r\n    <StyledButton disabled={disabled} onClick={onClick}>\r\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  disabled?: boolean;\r\n}\r\n/*\r\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\r\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\r\n */\r\n\r\n// background-color: ${(props) => (!props.disabled ? '#571eb1' : props.theme.color.grey[900])};\r\n// color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  border: 2px solid;\r\n  border-radius: 28px;\r\n  background-color: #d3c7b826;\r\n  box-shadow: ${(props) => ('0px 0px 5px 0px ' + !props.disabled ? 'rgba(251,221,76,1)' : 'grey' + ';')};\r\n  color: ${(props) => (!props.disabled ? '#410056' : 'grey')};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-weight: 700;\r\n  height: 56px;\r\n  justify-content: center;\r\n  letter-spacing: 1px;\r\n  outline: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  text-transform: uppercase;\r\n  width: 56px;\r\n\r\n  &:hover {\r\n    background-color: #410056;\r\n    color: #d3c7b826;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default IconButton;\r\n","import {useCallback, useState, useEffect} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {Bank} from '../polydoge-finance';\r\nimport {PoolStats} from '../polydoge-finance/types';\r\nimport config from '../config';\r\n\r\nconst useStatsForPool = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<PoolStats>();\r\n\r\n  const fetchAPRsForPool = useCallback(async () => {\r\n    setPoolAPRs(await polydogeFinance.getPoolAPRs(bank));\r\n  }, [polydogeFinance, bank]);\r\n\r\n  useEffect(() => {\r\n    fetchAPRsForPool().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchAPRsForPool, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPoolAPRs, polydogeFinance, fetchAPRsForPool]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useStatsForPool;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PageHeaderProps {\r\n  icon: React.ReactNode;\r\n  subtitle?: string;\r\n  title?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({icon, subtitle, title}) => {\r\n  return (\r\n    <StyledPageHeader>\r\n      {/* <StyledIcon>{icon}</StyledIcon> */}\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nconst StyledPageHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  max-width: 512px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: ${(props) => props.theme.color.grey[200]};\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[500]};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default PageHeader;\r\n","import React, {useContext} from 'react';\r\nimport styled, {ThemeContext} from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\r\n  const {spacing} = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n"],"sourceRoot":""}