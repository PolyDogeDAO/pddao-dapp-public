{"version":3,"sources":["hooks/useBanks.ts","hooks/useEarnings.ts","hooks/useHarvest.ts","hooks/useStake.ts","hooks/useStakedBalance.ts","hooks/useBank.ts","assets/img/nodes_Img.png","hooks/useCompound.ts","views/PDDollarNode/components/Harvest.jsx","hooks/useNodeText.ts","components/Icon/Icon.tsx","hooks/useNodes.ts","hooks/useMaxPayout.ts","hooks/useUserDetails.ts","hooks/useTotalNodes.ts","views/PDDollarNode/PDDollarNode.jsx","views/Nodes/GrapeCard.jsx","views/Nodes/PDDollarNodes.jsx","hooks/useHandleTransactionReceipt.ts","state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","hooks/useAllowance.ts","components/Value/Value.tsx","hooks/useApprove.ts","hooks/useStakedTokenPriceInDollars.ts","components/IconButton/IconButton.tsx","hooks/useStatsForPool.ts","components/PageHeader/PageHeader.tsx","components/Spacer/Spacer.tsx"],"names":["useBanks","useContext","BanksContext","banks","useEarnings","poolName","earnTokenName","poolId","useState","BigNumber","from","balance","setBalance","polydogeFinance","usePolyDogeFinance","isUnlocked","fetchBalance","useCallback","a","earnedFromBank","myAccount","useEffect","catch","err","console","error","stack","refreshBalance","setInterval","config","refreshInterval","clearInterval","useHarvest","bank","handleTransactionReceipt","useHandleTransactionReceipt","onReward","harvest","contract","sectionInUI","useStake","onStake","amount","amountBn","parseUnits","depositToken","decimal","stake","depositTokenName","useStakedBalance","stakedBalanceOnBank","useBank","contractName","find","module","exports","useCompound","onCompound","compound","Harvest","earnings","grapeStats","usePDDollarStats","tShareStats","usePDShareStats","tokenStats","tokenPriceInDollars","useMemo","Number","priceInDollars","toFixed","earnedInDollars","getDisplayBalance","className","TokenSymbol","symbol","Value","value","Label","text","variant","Button","onClick","disabled","eq","useNodeText","getNodeText","nodeId","styled","div","useNodes","user","poolAPRs","setPoolAPRs","fetchNodes","getNodes","useMaxPayout","getMaxPayout","useUserDetails","getUserDetails","useTotalNodes","getTotalNodes","useStyles","makeStyles","theme","gridItem","height","breakpoints","up","BankNotFound","Center","PageHeader","icon","title","subtitle","props","color","primary","main","PDDollarNode","bankId","useParams","account","useWallet","nodes","useStatsForPool","Context","grapeFinance","total","totalNodes","max","userDetails","useStakedTokenPriceInDollars","statsOnPool1","pddollarStats","useShareStats","TVLtee","src","NodesImg","target","href","toLocaleString","Grid","container","spacing","item","xs","sm","toString","total_claims","closedForStaking","yearlyAPR","dailyAPR","Box","GrapeCard","statsOnPool","md","lg","Card","CardContent","style","position","right","top","width","borderRadius","backgroundColor","alignItems","display","justifyContent","size","Typography","component","CardActions","Link","to","PDDollarNodes","path","useRouteMatch","Page","exact","fontSize","textAlign","marginTop","addTransaction","useTransactionAdder","addPopup","useAddPopup","promise","summary","then","tx","message","includes","toLowerCase","slice","chainId","dispatch","useDispatch","response","approval","hash","Error","useAllTransactions","state","useSelector","transactions","useHasPendingApproval","tokenAddress","spender","allTransactions","Object","keys","some","receipt","Date","getTime","addedTime","isTransactionRecent","StyledInputWrapper","grey","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","onSelectMax","StyledModalActions","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useAllowance","token","pendingApproval","allowance","setAllowance","fetchAllowance","StyledValue","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","useApprove","address","currentAllowance","approvalState","lt","PENDING","NOT_APPROVED","APPROVED","UNKNOWN","approve","stakedTokenName","stakedToken","stakedTokenPriceInDollars","setStakedTokenPriceInDollars","getDepositTokenPriceInDollars","refreshStakedTokenPriceInDollars","StyledButton","button","undefined","StyledLink","IconButton","fetchAPRsForPool","getPoolAPRs","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3","Spacer","s","ThemeContext"],"mappings":"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","file":"static/js/9.0c9aa99c.chunk.js","sourcesContent":["import {useContext} from 'react';\r\nimport {Context as BanksContext} from '../contexts/Banks';\r\n\r\nconst useBanks = () => {\r\n  const {banks} = useContext(BanksContext);\r\n  return [banks];\r\n};\r\n\r\nexport default useBanks;\r\n","import {useCallback, useEffect, useState} from 'react';\r\nimport {BigNumber} from 'ethers';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {ContractName} from '../polydoge-finance';\r\nimport config from '../config';\r\n\r\nconst useEarnings = (poolName: ContractName, earnTokenName: String, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const isUnlocked = polydogeFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await polydogeFinance.earnedFromBank(poolName, earnTokenName, poolId, polydogeFinance.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, earnTokenName, poolId, polydogeFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, polydogeFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarnings;\r\n","import {useCallback} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {Bank} from '../polydoge-finance';\r\n\r\nconst useHarvest = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleReward = useCallback(() => {\r\n    handleTransactionReceipt(\r\n      polydogeFinance.harvest(bank.contract, bank.poolId, bank.sectionInUI),\r\n      `Claim ${bank.earnTokenName} from ${bank.contract}`,\r\n    );\r\n  }, [bank, polydogeFinance, handleTransactionReceipt]);\r\n\r\n  return { onReward: handleReward };\r\n};\r\n\r\nexport default useHarvest;\r\n","import { useCallback } from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport { Bank } from '../polydoge-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\nimport { BigNumber } from 'ethers';\r\n\r\nconst useStake = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleStake = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = bank.sectionInUI !== 3 ? parseUnits(amount, bank.depositToken.decimal) : BigNumber.from(amount);\r\n      if (bank.sectionInUI === 3) {\r\n        handleTransactionReceipt(\r\n          polydogeFinance.stake(bank.contract, bank.poolId,bank.sectionInUI, amountBn),\r\n          `Buy ${amount} ${bank.depositTokenName} Node`,\r\n        );\r\n      } else {\r\n        handleTransactionReceipt(\r\n          polydogeFinance.stake(bank.contract, bank.poolId,bank.sectionInUI, amountBn),\r\n          `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\r\n        );\r\n      }\r\n    },\r\n    [bank, polydogeFinance, handleTransactionReceipt],\r\n  );\r\n  return { onStake: handleStake };\r\n};\r\n\r\nexport default useStake;\r\n","import {useCallback, useEffect, useState} from 'react';\r\n\r\nimport {BigNumber} from 'ethers';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {ContractName} from '../polydoge-finance';\r\nimport config from '../config';\r\n\r\nconst useStakedBalance = (poolName: ContractName, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const isUnlocked = polydogeFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await polydogeFinance.stakedBalanceOnBank(poolName, poolId, polydogeFinance.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, poolId, polydogeFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, setBalance, polydogeFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalance;\r\n","import {useContext} from 'react';\r\nimport {Context as BanksContext} from '../contexts/Banks';\r\nimport {Bank, ContractName} from '../polydoge-finance';\r\n\r\nconst useBank = (contractName: ContractName): Bank => {\r\n  const {banks} = useContext(BanksContext);\r\n  return banks.find((bank) => bank.contract === contractName);\r\n};\r\n\r\nexport default useBank;\r\n","module.exports = __webpack_public_path__ + \"static/media/nodes_Img.d8403ca2.png\";","import {useCallback} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {Bank} from '../polydoge-finance';\r\n\r\nconst useCompound = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleReward = useCallback(() => {\r\n    handleTransactionReceipt(\r\n      polydogeFinance.compound(bank.contract, bank.poolId, bank.sectionInUI),\r\n      `Compound Node rewards`,\r\n    );\r\n  }, [bank, polydogeFinance, handleTransactionReceipt]);\r\n\r\n  return {onCompound: handleReward};\r\n};\r\n\r\nexport default useCompound;\r\n","import React, {useMemo} from 'react';\r\n\r\nimport {Button} from '@material-ui/core';\r\nimport Label from '../../../components/Label';\r\nimport Value from '../../../components/Value';\r\nimport useEarnings from '../../../hooks/useEarnings';\r\nimport useHarvest from '../../../hooks/useHarvest';\r\nimport useCompound from '../../../hooks/useCompound';\r\nimport {getDisplayBalance} from '../../../utils/formatBalance';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport {Bank} from '../../../polydoge-finance';\r\nimport usePDDollarStats from '../../../hooks/usePDDollarStats';\r\nimport usePDShareStats from '../../../hooks/usePDShareStats';\r\n\r\nconst Harvest = ({bank}) => {\r\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\r\n  const grapeStats = usePDDollarStats();\r\n  const tShareStats = usePDShareStats();\r\n  const tokenStats = bank.earnTokenName === 'PDDOLLAR' ? grapeStats : tShareStats;\r\n  \r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n    [tokenStats],\r\n  );\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n  const { onReward } = useHarvest(bank);\r\n  const { onCompound } = useCompound(bank);\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <div className=\"baseCard harvestCard\">\r\n        <div className=\"label\">reward</div>\r\n        <div className=\"containerInfoCard\">\r\n          <TokenSymbol symbol={bank.earnTokenName} />\r\n          <div className=\"harvestValue\">\r\n            <Value value={Number(getDisplayBalance(earnings)).toFixed(2)} />\r\n          </div>\r\n          <div className=\"harvestValueEarned\">\r\n            <Label text={`≈ $${earnedInDollars}`} variant=\"nodey\" />\r\n              <div>{bank.earnTokenName} Earned</div>\r\n          </div>\r\n        </div>\r\n        <div className='harvestButtonsContainer'>\r\n          <Button\r\n            onClick={onReward}\r\n              disabled={earnings.eq(0)}\r\n              className={earnings.eq(0) ? 'claimHarvestOff' : 'claimHarvestOn'}\r\n          >\r\n            Claim Reward\r\n          </Button>\r\n          {/* {bank.earnTokenName === 'PDDOLLAR' ? (\r\n            <Button\r\n              onClick={onCompound}\r\n              disabled={earnings < 50 * 1e18}\r\n              className={earnings < 50 * 1e18 ? 'claimHarvestOff' : 'claimHarvestOn'}\r\n            >\r\n              Compound {(earnings / (50 * 1e18)) | 0} Nodes\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              onClick={onCompound}\r\n              disabled={earnings < 50 * 1e18}\r\n              className={earnings < 50 * 1e18 ? 'claimHarvestOff' : 'claimHarvestOn'}\r\n            >\r\n              Compound {(earnings / (50 * 1e18)) | 0} Nodes\r\n            </Button>\r\n          )} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Harvest;","import React from 'react';\r\n\r\nconst useNodeText = () => {\r\n\r\n  const getNodeText = (nodeId: number) => {\r\n    switch (nodeId) {\r\n      case 0: return 'Node';\r\n      case 1: return 'Mini Node';\r\n      case 2: return 'Kilo Node';\r\n      case 3: return 'Mega Node';\r\n      case 4: return 'Giga Node';\r\n        defualt: return '';\r\n    }\r\n  }\r\n\r\n  return { getNodeText }\r\n};\r\n\r\nexport default useNodeText;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface IconProps {\r\n  color?: string;\r\n  children?: string;\r\n}\r\n\r\nconst Icon: React.FC = ({children}) => <StyledIcon>{children}</StyledIcon>;\r\n\r\nconst StyledIcon = styled.div``;\r\n\r\nexport default Icon;\r\n","import { BigNumber } from 'ethers';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport config from '../config';\r\n\r\nconst useNodes = (contract: string, sectionInUI: number, user: string) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<BigNumber[]>([]);\r\n\r\n  const fetchNodes = useCallback(async () => {\r\n    setPoolAPRs(await polydogeFinance.getNodes(contract, user));\r\n  }, [polydogeFinance, contract, user]);\r\n\r\n  useEffect(() => {\r\n    if (user && sectionInUI === 3) {\r\n      fetchNodes().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\r\n      const refreshInterval = setInterval(fetchNodes, config.refreshInterval);\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [setPoolAPRs, polydogeFinance, fetchNodes, user, sectionInUI]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useNodes;","import { BigNumber } from 'ethers';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport config from '../config';\r\n\r\nconst useMaxPayout = (contract: string, sectionInUI: number, user: string) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<BigNumber[]>([]);\r\n\r\n  const fetchNodes = useCallback(async () => {\r\n    setPoolAPRs(await polydogeFinance.getMaxPayout(contract, user));\r\n  }, [polydogeFinance, contract, user]);\r\n\r\n  useEffect(() => {\r\n    if (user && sectionInUI === 3) {\r\n      fetchNodes().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\r\n      const refreshInterval = setInterval(fetchNodes, config.refreshInterval);\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [setPoolAPRs, polydogeFinance, fetchNodes, user, sectionInUI]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useMaxPayout;","import { BigNumber } from 'ethers';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport config from '../config';\r\n\r\nconst useUserDetails = (contract: string, sectionInUI: number, user: string) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<BigNumber[]>([]);\r\n\r\n  const fetchNodes = useCallback(async () => {\r\n    setPoolAPRs(await polydogeFinance.getUserDetails(contract, user));\r\n  }, [polydogeFinance, contract, user]);\r\n\r\n  useEffect(() => {\r\n    if (user && sectionInUI === 3) {\r\n      fetchNodes().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\r\n      const refreshInterval = setInterval(fetchNodes, config.refreshInterval);\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [setPoolAPRs, polydogeFinance, fetchNodes, user, sectionInUI]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useUserDetails;","import { BigNumber } from 'ethers';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport config from '../config';\r\n\r\nconst useTotalNodes = (contract: string, sectionInUI: number) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<BigNumber[]>([]);\r\n\r\n  const fetchNodes = useCallback(async () => {\r\n    setPoolAPRs(await polydogeFinance.getTotalNodes(contract));\r\n  }, [polydogeFinance, contract]);\r\n\r\n  useEffect(() => {\r\n    if (sectionInUI === 3) {\r\n      fetchNodes().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\r\n      const refreshInterval = setInterval(fetchNodes, config.refreshInterval);\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [setPoolAPRs, polydogeFinance, fetchNodes, sectionInUI]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useTotalNodes;","import React, { useState, useContext, useMemo } from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport { Box, Card, CardContent, Typography, Grid, MenuItem,withStyles } from '@material-ui/core';\r\nimport Page from '../../components/Page';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\nimport Spacer from '../../components/Spacer';\r\nimport Harvest from './components/Harvest';\r\nimport Stake from './components/Stake';\r\nimport useNodeText from '../../hooks/useNodeText';\r\nimport useBank from '../../hooks/useBank';\r\nimport useBanks from '../../hooks/useBanks';\r\nimport useNodes from '../../hooks/useNodes';\r\nimport useMaxPayout from '../../hooks/useMaxPayout';\r\nimport useUserDetails from '../../hooks/useUserDetails';\r\nimport totalNodes from '../../hooks/useTotalNodes';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\nimport { Context } from '../../contexts/BombFinanceProvider';\r\nimport usePDDollarStats from '../../hooks/usePDDollarStats';\r\nimport useStakedTokenPriceInDollars from '../../hooks/useStakedTokenPriceInDollars';\r\nimport \"../Boardroom/Boardroom.css\";\r\nimport \"../Nodes/Node.css\";\r\nimport NodesImg from \"../../assets/img/nodes_Img.png\"\r\n\r\nimport useShareStats from '../../hooks/usePDShareStats';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    height: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '90px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PDDollarNode = () => {\r\n    const { bankId } = useParams();\r\n    \r\n    const bank = useBank(bankId);\r\n    const { getNodeText } = useNodeText();\r\n    const { account } = useWallet();\r\n\r\n    const classes = useStyles();\r\n    const [poolId, setPoolId] = useState(0);\r\n    const LOCK_ID = 'LOCK_ID';\r\n    const statsOnPool = useStatsForPool(bank);\r\n    const {grapeFinance} = useContext(Context);\r\n    const nodes = useNodes(bank?.contract, bank?.sectionInUI, account);\r\n    const total = totalNodes(bank?.contract, bank?.sectionInUI);\r\n    const max = useMaxPayout(bank?.contract, bank?.sectionInUI, account);\r\n    const userDetails = useUserDetails(bank?.contract, bank?.sectionInUI, account);\r\n    const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\r\n\r\n    const [banks] = useBanks();\r\n    const statsOnPool1 = useStatsForPool(banks[3]);\r\n    const pddollarStats = usePDDollarStats();\r\n    const tShareStats = useShareStats();\r\n    const tokenName = bank.earnTokenName === 'PDSHARE' ? 'PDSHARE' : 'PDDOLLAR';\r\n    const tokenStats = bank.earnTokenName === 'PDDOLLAR' ? pddollarStats : tShareStats ;\r\n      const tokenPriceInDollars = useMemo(\r\n        () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n        [tokenStats],\r\n      \r\n\r\n  \r\n\r\n\r\n  );\r\n  const TVLtee = (tokenPriceInDollars * (Number(total[0]) * 50));\r\n\r\n  return bank ? (\r\n      <div className='nodesMainPage'>\r\n        <div className='subHeader'>\r\n          <div className='containerInfoSub'>\r\n            <img className=\"boardRoomImg\" src={NodesImg} />\r\n            <div className='pageInfo'>\r\n              <h1 className='titlePage'>Nodes</h1>\r\n              <span>Generate PDDollar owning Nodes</span>\r\n              <div className='alert'>\r\n                <p>Please read our\r\n                  <a target={'_blank'} href=\"https://polydogedao.gitbook.io/context/system/dao-nodes\">\r\n                    Node Docs & Strategy\r\n                  </a>\r\n                in order to fully understand how our node pools work before purchasing. Sticking to the current strategy helps\r\n                support the protocol which in turn helps you to continue to earn rewards!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"boardRoomLive\" target=\"_blank\">\r\n            <div>TVL</div>\r\n             ${TVLtee ? Number(Number(TVLtee).toFixed(0)).toLocaleString('en-US') : '-.--'}\r\n          </div>\r\n        </div>\r\n        <Grid container spacing={2} className=\"tabsBoardroom\">\r\n          <Grid item xs={12} sm={4} className=\"gridFlex\">\r\n              <div className='tabInfoBoardroom baseCard'>\r\n                <div>\r\n                  <div className='currentEpoch'>Your Nodes | TVL</div>\r\n                  <div className='fontBold'>\r\n                    {nodes[0] && (\r\n                      <>\r\n                        <b>{nodes[0].toString()}</b> |{' '}\r\n                        <b>\r\n                          $\r\n                          {bank.depositTokenName === 'GRAPE'\r\n                            ? (nodes[0] * (tokenPriceInDollars * 50)).toFixed(0)\r\n                            : (nodes[0] * (tokenPriceInDollars * 0.5)).toFixed(0)}\r\n                        </b>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className='currentEpoch'>Amount Claimed</div>\r\n                  <div className='fontBold'>\r\n                    {(Number(userDetails.total_claims) / 1e18).toFixed(2)} {bank.earnTokenName}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} className=\"gridFlex\">\r\n            <div className='tabInfoBoardroom baseCard'>\r\n              <div>\r\n                <div className='currentEpoch'>Max Possible Pay</div>\r\n                <div className='fontBold'>\r\n                  {Number(max) / 1e18} {bank.earnTokenName}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className='currentEpoch'>APR | Daily</div>\r\n                <div className='fontBold'>\r\n                  {bank.closedForStaking ? '0.00' : statsOnPool1?.yearlyAPR}% |{' '}\r\n                  {bank.closedForStaking ? '0.00' : statsOnPool1?.dailyAPR}%\r\n                </div>\r\n              </div>\r\n              </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} className=\"gridFlex\">\r\n            <div className='tabInfoBoardroom baseCard'>\r\n              <div className='currentEpoch'>\r\n                Total {bank.earnTokenName} Nodes\r\n              </div>\r\n                <div className='fontBold'>{Number(total[0])}</div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      <Box >\r\n          <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Harvest bank={bank} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                {/* {<Stake bank={bank} />} */}\r\n              </Grid>\r\n          </Grid>\r\n      </Box>\r\n  </div>\r\n  ) : (\r\n    <BankNotFound />\r\n  );\r\n};\r\n\r\nconst LPTokenHelpText = ({bank}) => {\r\n  // const grapeFinance = useGrapeFinance();\r\n\r\n  // let pairName: string;\r\n  // let uniswapUrl: string;\r\n  // let vaultUrl: string;\r\n  // let exchange: string;\r\n  // if (bank.depositTokenName.includes('GRAPE-MIM')) {\r\n  //   pairName = 'GRAPE-MIM pair';\r\n  //   uniswapUrl =\r\n  //     'https://traderjoexyz.com/pool/0x130966628846bfd36ff31a822705796e8cb8c18d/0x5541d83efad1f281571b343977648b75d95cdac2';\r\n  //   vaultUrl = '#';\r\n\r\n  //   exchange = 'joe';\r\n  // } else if (bank.depositTokenName.includes('WINE-MIM')) {\r\n  //   pairName = 'WINE-MIM pair';\r\n  //   uniswapUrl =\r\n  //     'https://traderjoexyz.com/pool/0x130966628846bfd36ff31a822705796e8cb8c18d/0xc55036b5348cfb45a932481744645985010d3a44';\r\n  //   vaultUrl = '#';\r\n\r\n  //   exchange = 'joe';\r\n  // } else if (bank.depositTokenName.includes('GRAPE-WINE')) {\r\n  //   pairName = 'GRAPE-WINE pair';\r\n  //   uniswapUrl =\r\n  //     'https://traderjoexyz.com/pool/0x5541d83efad1f281571b343977648b75d95cdac2/0xc55036b5348cfb45a932481744645985010d3a44';\r\n  //   vaultUrl = '#';\r\n  //   exchange = 'joe';\r\n  // } else if (bank.depositTokenName === 'HSHARE-WINE-LP') {\r\n  //   pairName = 'HSHARE-WINE-LP';\r\n  //   uniswapUrl =\r\n  //     'https://app.pangolin.exchange/#/add/0xC55036B5348CfB45a932481744645985010d3A44/0xfa4B6db72A650601E7Bd50a0A9f537c9E98311B2';\r\n  //   vaultUrl = '#';\r\n  //   exchange = 'Pangolin';\r\n  // }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledLink href={'#'} target=\"_blank\">\r\n          <span style={{color: '#000'}}>\r\n            Provide liquidity for {'pairname'} on {'exchange'}\r\n          </span>\r\n        </StyledLink>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst BankNotFound = () => {\r\n  return (\r\n    <Center>\r\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\".\" />\r\n    </Center>\r\n  );\r\n};\r\n\r\nconst StyledBank = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.color.primary.main};\r\n`;\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledOutline = styled.div`\r\n  background: #1d48b6;\r\n  background-size: 300% 300%;\r\n  border-radius: 0px;\r\n  filter: blur(8px);\r\n  position: absolute;\r\n  top: -6px;\r\n  right: -6px;\r\n  bottom: -6px;\r\n  left: -6px;\r\n  z-index: -1;\r\n`;\r\n\r\nconst StyledOutlineWrapper = styled.div`    \r\n    position: relative;\r\n    background: #08090d;\r\n    border-radius: 0px;\r\n    box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)\r\n`;\r\n\r\n\r\n\r\nexport default PDDollarNode;\r\n","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Box, Button, Card, CardActions, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport {useParams} from 'react-router-dom';\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\nimport useBanks from '../../hooks/useBanks';\r\nimport SwapVerticalCircleIcon from '@material-ui/icons/SwapVerticalCircle';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\nconst GrapeCard = ({}) => {\r\n  const [banks] = useBanks();\r\n  const statsOnPool = useStatsForPool(banks[3]);\r\n  return (\r\n    <Grid item xs={12} md={4} lg={4}>\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Box style={{position: 'relative'}}>\r\n            <Box\r\n              style={{\r\n                position: 'absolute',\r\n                right: '5px',\r\n                top: '-5px',\r\n                height: '48px',\r\n                width: '48px',\r\n                borderRadius: '40px',\r\n                backgroundColor: 'rgba(255,255,255,0.1)',\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <TokenSymbol size={32} symbol={'GNODE'} />\r\n            </Box>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              PDDollar Node\r\n            </Typography>\r\n            <Typography color=\"#322f32\">\r\n              Lock your PDDollar to earn daily yields<br></br>\r\n              <b>Daily APR:</b> {statsOnPool?.dailyAPR }%<br></br>\r\n              <b>Yearly APR:</b> {statsOnPool?.yearlyAPR }%\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n        <CardActions style={{justifyContent: 'flex-end'}}>\r\n          <Button className=\"shinyButtonSecondary\" component={Link} to={'/nodes/PDDollarNode'}>\r\n            View\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GrapeCard;\r\n","import {Grid} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\r\nimport Page from '../../components/Page';\r\nimport PDDollarNode from '../PDDollarNode';\r\nimport GrapeCard from './GrapeCard';\r\nimport \"./Node.css\";\r\n// import WineMimCard from './WineMimCard';\r\n\r\nconst PDDollarNodes = () => {\r\n  const {path} = useRouteMatch();\r\n  return (\r\n    <Page>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <h2 style={{fontSize: '80px', textAlign: 'center'}}>NODES</h2>\r\n          <Grid container spacing={3} style={{marginTop: '20px'}}>\r\n            <GrapeCard />\r\n            {/* <WineMimCard /> */}\r\n          </Grid>\r\n        </Route>\r\n        <Route path={`${path}/:bankId`}>\r\n          <PDDollarNode />\r\n        </Route>\r\n      </Switch>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PDDollarNodes;\r\n","import {useCallback} from 'react';\r\nimport {TransactionResponse} from '@ethersproject/providers';\r\nimport {useTransactionAdder} from '../state/transactions/hooks';\r\nimport {useAddPopup} from '../state/application/hooks';\r\n\r\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\r\n  const addTransaction = useTransactionAdder();\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<TransactionResponse>, summary: string) => {\r\n      promise\r\n        .then((tx) => addTransaction(tx, {summary}))\r\n        .catch((err) => {\r\n          if (err.message.includes('User denied')) {\r\n            // User denied transaction signature on MetaMask.\r\n            return;\r\n          }\r\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\r\n          console.error(`${message}: ${err.message || err.stack}`);\r\n          addPopup({error: {message, stack: err.message || err.stack}});\r\n        });\r\n    },\r\n    [addPopup, addTransaction],\r\n  );\r\n}\r\n\r\nexport default useHandleTransactionReceipt;\r\n","import {TransactionResponse} from '@ethersproject/providers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useWallet} from 'use-wallet';\r\n\r\nimport {AppDispatch, AppState} from '../index';\r\nimport {addTransaction, clearAllTransactions} from './actions';\r\nimport {TransactionDetails} from './reducer';\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {summary?: string; approval?: {tokenAddress: string; spender: string}},\r\n) => void {\r\n  const {chainId, account} = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {summary, approval}: {summary?: string; approval?: {tokenAddress: string; spender: string}} = {},\r\n    ) => {\r\n      if (!account) return;\r\n      if (!chainId) return;\r\n\r\n      const {hash} = response;\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.');\r\n      }\r\n      dispatch(addTransaction({hash, from: account, chainId, approval, summary}));\r\n    },\r\n    [dispatch, chainId, account],\r\n  );\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): {[txHash: string]: TransactionDetails} {\r\n  const {chainId} = useWallet();\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  return chainId ? state[chainId] ?? {} : {};\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions();\r\n  if (!transactionHash || !transactions[transactionHash]) {\r\n    return false;\r\n  }\r\n  return !transactions[transactionHash].receipt;\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000;\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions();\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash];\r\n        if (!tx) return false;\r\n        if (tx.receipt) {\r\n          return false;\r\n        } else {\r\n          const approval = tx.approval;\r\n          if (!approval) return false;\r\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  );\r\n}\r\n\r\nexport function useClearAllTransactions(): {clearAllTransactions: () => void} {\r\n  const {chainId} = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return {\r\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({chainId})), [dispatch, chainId]),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode;\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  startAdornment?: React.ReactNode;\r\n  value: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  );\r\n};\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[200]};\r\n  border-radius: ${(props) => props.theme.borderRadius}px;\r\n  display: flex;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`;\r\n\r\nexport default Input;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport BigNumber from 'bignumber.js/bignumber';\r\nimport { Button } from '@material-ui/core';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n                Max\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default TokenInput;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalActions: React.FC = ({children}) => {\r\n  const l = React.Children.toArray(children).length;\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <StyledSpacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  );\r\n};\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[100]}00;\r\n  display: flex;\r\n  height: 96px;\r\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\r\n    ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ModalActions;\r\n","import {useCallback, useEffect, useState} from 'react';\r\nimport {useWallet} from 'use-wallet';\r\nimport {BigNumber} from 'ethers';\r\nimport ERC20 from '../polydoge-finance/ERC20';\r\n\r\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\r\n  const [allowance, setAllowance] = useState<BigNumber>(null);\r\n  const {account} = useWallet();\r\n\r\n  const fetchAllowance = useCallback(async () => {\r\n    const allowance = await token.allowance(account, spender);\r\n    setAllowance(allowance);\r\n  }, [account, spender, token]);\r\n\r\n  useEffect(() => {\r\n    if (account && spender && token) {\r\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\r\n    }\r\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\r\n\r\n  return allowance;\r\n};\r\n\r\nexport default useAllowance;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\ninterface ValueProps {\r\n  value: string;\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({value}) => {\r\n  return <StyledValue>{value}</StyledValue>;\r\n};\r\n\r\nconst StyledValue = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default Value;\r\n","import {BigNumber, ethers} from 'ethers';\r\nimport {useCallback, useMemo} from 'react';\r\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../polydoge-finance/ERC20';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import {useCallback, useEffect, useState} from 'react';\r\n\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport config from '../config';\r\nimport ERC20 from '../polydoge-finance/ERC20';\r\n\r\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\r\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\r\n  const polydogeFinance = usePolyDogeFinance();\r\n  const isUnlocked = polydogeFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await polydogeFinance.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\r\n    setStakedTokenPriceInDollars(balance);\r\n  }, [stakedToken, stakedTokenName, polydogeFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\r\n    }\r\n  }, [isUnlocked, setStakedTokenPriceInDollars, polydogeFinance, fetchBalance]);\r\n\r\n  return stakedTokenPriceInDollars;\r\n};\r\n\r\nexport default useStakedTokenPriceInDollars;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IconButtonProps {\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n  to?: string;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({ children, disabled, onClick, to }) => {\r\n  return (\r\n    <StyledButton disabled={disabled} onClick={onClick}>\r\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\ninterface StyledButtonProps {\r\n  disabled?: boolean;\r\n}\r\n/*\r\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\r\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\r\n */\r\n\r\n// background-color: ${(props) => (!props.disabled ? '#571eb1' : props.theme.color.grey[900])};\r\n// color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  border: 2px solid;\r\n  border-radius: 28px;\r\n  background-color: #d3c7b826;\r\n  box-shadow: ${(props) => ('0px 0px 5px 0px ' + !props.disabled ? 'rgba(251,221,76,1)' : 'grey' + ';')};\r\n  color: ${(props) => (!props.disabled ? '#410056' : 'grey')};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-weight: 700;\r\n  height: 56px;\r\n  justify-content: center;\r\n  letter-spacing: 1px;\r\n  outline: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  text-transform: uppercase;\r\n  width: 56px;\r\n\r\n  &:hover {\r\n    background-color: #410056;\r\n    color: #d3c7b826;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default IconButton;\r\n","import {useCallback, useState, useEffect} from 'react';\r\nimport usePolyDogeFinance from './usePolyDogeFinance';\r\nimport {Bank} from '../polydoge-finance';\r\nimport {PoolStats} from '../polydoge-finance/types';\r\nimport config from '../config';\r\n\r\nconst useStatsForPool = (bank: Bank) => {\r\n  const polydogeFinance = usePolyDogeFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<PoolStats>();\r\n\r\n  const fetchAPRsForPool = useCallback(async () => {\r\n    setPoolAPRs(await polydogeFinance.getPoolAPRs(bank));\r\n  }, [polydogeFinance, bank]);\r\n\r\n  useEffect(() => {\r\n    fetchAPRsForPool().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchAPRsForPool, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPoolAPRs, polydogeFinance, fetchAPRsForPool]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useStatsForPool;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PageHeaderProps {\r\n  icon: React.ReactNode;\r\n  subtitle?: string;\r\n  title?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({icon, subtitle, title}) => {\r\n  return (\r\n    <StyledPageHeader>\r\n      {/* <StyledIcon>{icon}</StyledIcon> */}\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nconst StyledPageHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  max-width: 512px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: ${(props) => props.theme.color.grey[200]};\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[500]};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default PageHeader;\r\n","import React, {useContext} from 'react';\r\nimport styled, {ThemeContext} from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\r\n  const {spacing} = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n"],"sourceRoot":""}